#########################

# Gatling Configuration #
#########################

gatling {
  core {
    #outputDirectoryBaseName = "performance-test" # Префикс для каждой папки с результатами симуляции
    runDescription = "High performance test run"   # Описание запуска симуляции, отображаемое в отчете
    encoding = "utf-8"                             # Кодировка для работы с файлами и строками
    #simulationClass = ""                          # Полностью квалифицированное имя класса симуляции
    elFileBodiesCacheMaxCapacity = 500             # Размер кэша для шаблонов запросов EL (увеличено для производительности)
    rawFileBodiesCacheMaxCapacity = 500            # Размер кэша для файлов запросов (увеличено)
    rawFileBodiesInMemoryMaxSize = 5000            # Максимальный размер файлов, которые могут кэшироваться в памяти (увеличено до 5 MB)
    pebbleFileBodiesCacheMaxCapacity = 500         # Размер кэша для Pebble шаблонов запросов
    feederAdaptiveLoadModeThreshold = 500          # Порог загрузки файлов (увеличено, чтобы больше загружалось в память)
    shutdownTimeout = 30000                        # Увеличен тайм-аут для завершения процессов до 30 секунд
    extract {
      regex {
        cacheMaxCapacity = 500                     # Кэширование скомпилированных регулярных выражений для ускорения работы
      }
      xpath {
        cacheMaxCapacity = 500                     # Кэширование XPath-запросов для улучшения производительности
      }
      jsonPath {
        cacheMaxCapacity = 500                     # Кэширование JSONPath-запросов
      }
      css {
        cacheMaxCapacity = 500                     # Кэширование CSS-селекторов для повышения скорости
      }
    }
    directory {
      #simulations = "/path/to/simulations"        # Директория, где находятся классы симуляций
      #resources = "/path/to/resources"            # Директория с ресурсами, такими как feeder-файлы и тела запросов
      #reportsOnly = ""                            # Если указано, генерировать отчеты только для указанной папки
      #binaries = "target/scala-2.13/classes"       # Папка, где находятся скомпилированные классы
      results = "results"                          # Папка для сохранения отчетов
    }
    zinc{
      #jvmArgs = "-Xss10M"
    }
  }
  socket {
    connectTimeout = 10000                          # Тайм-аут для установления TCP-соединения, уменьшено для ускорения
    readTimeout = 15000                             # Timeout when a used connection stays idle
    writeTimeout = 15000
    tcpNoDelay = true                              # Включение TCP_NODELAY для уменьшения задержек в передаче данных
    soKeepAlive = true                             # Включить TCP keepalive для поддержания долгих соединений
    soReuseAddress = true                          # Разрешить повторное использование адресов сокетов
  }
  netty {
    useNativeTransport = true                      # Использовать нативный транспорт Netty для повышения производительности
    allocator = "pooled"                           # Использовать пул памяти для уменьшения нагрузки на систему
    maxThreadLocalCharBufferSize = 400000          # Увеличить размер буфера для работы с символами
  }
  ssl {
    useOpenSsl = true                              # Использовать OpenSSL для повышения производительности TLS-соединений
    useOpenSslFinalizers = true                    # Использовать финализаторы для очистки OpenSSL контекстов
    handshakeTimeout = 5000                        # Уменьшен тайм-аут для TLS рукопожатий
    useInsecureTrustManager = true                 # Доверять всем сертификатам серверов (для тестирования)
    enabledProtocols = ["TLSv1.2", "TLSv1.3"]      # Включить только современные протоколы TLS
    enabledCipherSuites = []                       # Разрешить все доступные шифры
    sessionCacheSize = 1000                        # Кэширование SSL-сессий для ускорения последующих соединений
    sessionTimeout = 300                           # Тайм-аут для SSL-сессий (в секундах)
    enableSni = true                               # Включить поддержку SNI (Server Name Indication)
    keyStore {
        #type = ""      # Type of SSLContext's KeyManagers store
        #file = ""      # Location of SSLContext's KeyManagers store
        #password = ""  # Password for SSLContext's KeyManagers store
        #algorithm = "" # Algorithm used SSLContext's KeyManagers store
      }
    trustStore {
        #type = ""      # Type of SSLContext's TrustManagers store
        #file = ""      # Location of SSLContext's TrustManagers store
        #password = ""  # Password for SSLContext's TrustManagers store
        #algorithm = "" # Algorithm used by SSLContext's TrustManagers store
      }
  }
  charting {
    noReports = true                              # Генерировать HTML отчеты после тестирования
    #maxPlotPerSeries = 5000                        # Увеличено количество точек на графике для более подробных отчетов
    #useGroupDurationMetric = true                  # Использовать продолжительность групп как метрику
    indicators {
      #lowerBound = 500                             # Нижняя граница времени ответа для отчета
      #higherBound = 1000                           # Верхняя граница времени ответа для отчета
      #percentile1 = 50                             # Показатель для 1-го процентиля (в отчете)
      #percentile2 = 75                             # Показатель для 2-го процентиля (в отчете)
      #percentile3 = 95                             # Показатель для 3-го процентиля (в отчете)
      #percentile4 = 99                             # Показатель для 4-го процентиля (в отчете)
    }
  }
  http {
    fetchedCssCacheMaxCapacity = 500               # Увеличен кэш для загруженного CSS
    fetchedHtmlCacheMaxCapacity = 500              # Увеличен кэш для загруженного HTML
    perUserCacheMaxCapacity = 500                  # Увеличен кэш на каждого пользователя
    acceptAnyCertificate = true
    #warmUpUrl = "https://example.com"              # URL для разогрева HTTP-стека
    enableGA = false                               # Отключена отправка данных в Google Analytics
    pooledConnectionIdleTimeout = 60000           # Увеличен тайм-аут для неактивных соединений в пуле
    requestTimeout = 60000                        # Увеличен тайм-аут для HTTP-запросов
    enableHostnameVerification = false             # Отключить проверку имени хоста для SSL-соединений
    dns {
      queryTimeout = 5000                          # Тайм-аут для DNS-запросов
      maxQueriesPerResolve = 10                    # Максимум запросов DNS для разрешения имени
    }
  }
  jms {
    replyTimeoutScanPeriod = 500                   # Период сканирования для ответов JMS
  }
  data {
    writers = [console, file, graphite ]# Запись данных в консоль и файл
    console {
      light = false                                 # Включить легкую версию консольных отчетов
      writePeriod = 60                              # Интервал записи данных (в секундах)
    }
    file {
      bufferSize = 16384                           # Увеличен размер буфера для записи данных в файл
    }
    leak {
      noActivityTimeout = 10                       # Тайм-аут неактивности, после которого обнаруживаются утечки
    }
    graphite {
      light = true                                 # Отправлять только сводные данные в Graphite
      host = "localhost"                           # Хост для отправки данных в Carbon (Graphite)
      port = 2003                                  # Порт для отправки данных в Carbon (Graphite)
      protocol = "tcp"                             # Использовать протокол TCP для отправки данных
      rootPathPrefix = "gatling"                   # Префикс для всех метрик, отправляемых в Graphite
      bufferSize = 8192                            # Размер буфера для отправки данных
      writePeriod = 5                              # Интервал записи данных в Carbon (в секундах)
    }
  }
}